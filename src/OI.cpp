// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveNormal.h"
#include "Commands/DriveSideways.h"
#include "Commands/DriveStraight.h"
#include "Commands/YourMumTester.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
	// Process operator interface input here.
#if 0
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

	driveJoy = new Joystick(0);
	
	driveSidewaysB = new JoystickButton(driveJoy, 3);
	driveSidewaysB->WhileHeld(new DriveSideways());
	driveStraightB = new JoystickButton(driveJoy, 2);
	driveStraightB->WhileHeld(new DriveStraight());
	driveNormalB = new JoystickButton(driveJoy, 1);
	driveNormalB->WhileHeld(new DriveNormal());
     

        // SmartDashboard Buttons
	SmartDashboard::PutData("DriveNormal", new DriveNormal());

	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

	SmartDashboard::PutData("DriveStraight", new DriveStraight());

	SmartDashboard::PutData("DriveSideways", new DriveSideways());

	SmartDashboard::PutData("YourMumTester", new YourMumTester());


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

#endif
	driveJoy = new Joystick(0);

		driveStraightB = new JoystickButton(driveJoy, 1);
		driveStraightB->WhileHeld(new DriveStraight());
		driveNormalB = new JoystickButton(driveJoy, 2);
		driveNormalB->WhileHeld(new DriveNormal());
		driveSidewaysB = new JoystickButton(driveJoy, 3);
		driveSidewaysB->WhileHeld(new DriveNormal());



		SmartDashboard::PutData("DriveNormal", new DriveNormal());

		SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

		SmartDashboard::PutData("DriveStraight", new DriveStraight());

}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

Joystick* OI::getDriveJoy() {
	return driveJoy;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS


float OI::GetDriveY() {
	return driveJoy->GetRawAxis(1);
}

float OI::GetDriveX() {
	return driveJoy->GetRawAxis(0);
}

float OI::GetTwistX() {
	return driveJoy->GetRawAxis(4);
}
float OI::GetThrot() {
	return driveJoy->GetRawAxis(2);
}
float OI::GetThrot2() {
	return driveJoy->GetRawAxis(3);
}


